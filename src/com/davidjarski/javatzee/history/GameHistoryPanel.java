/* 
 * The MIT License
 *
 * Copyright 2014 David Jarski.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.davidjarski.javatzee.history;

import com.davidjarski.javatzee.scorepad.ScorePanel;
import java.text.DateFormat;
import java.util.GregorianCalendar;

public class GameHistoryPanel extends javax.swing.JPanel
{ 
    private final DateFormat dateFormatter = DateFormat.getDateInstance(DateFormat.LONG);
    private final DateFormat timeFormatter = DateFormat.getTimeInstance(DateFormat.SHORT);
    private final GregorianCalendar calendar = new GregorianCalendar();

    /**
     * Creates new form GameHistoryPanel
     */
    public GameHistoryPanel() {
        initComponents();
    }
    
    public void setGameRecord(GameRecord record) {
        scorePanel.setStateFromGameRecord(record);
        calendar.setTimeInMillis(record.getMillis());
        lblDate.setText(dateFormatter.format(calendar.getTime()) + "   " +
                timeFormatter.format(calendar.getTime()));
    }
    
    public int getScorePanelHeight() {
        return scorePanel.getHeight();
    }
    
    ScorePanel getScorePanel() {
        return scorePanel;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlHeader = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        pnlScorepad = new javax.swing.JPanel();
        scorePanelLabels1 = new com.davidjarski.javatzee.scorepad.ScorePanelLabels();
        scorePanel = new com.davidjarski.javatzee.scorepad.ScorePanel();

        setToolTipText("");
        setLayout(new java.awt.GridBagLayout());

        pnlHeader.setBackground(new java.awt.Color(255, 203, 20));
        pnlHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlHeader.setLayout(new java.awt.GridBagLayout());

        lblHeader.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Scorepad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlHeader.add(lblHeader, gridBagConstraints);

        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setText("January 1, 1970    12:00 AM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 0);
        pnlHeader.add(lblDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(pnlHeader, gridBagConstraints);

        pnlScorepad.setBorder(null);
        pnlScorepad.setLayout(new javax.swing.BoxLayout(pnlScorepad, javax.swing.BoxLayout.X_AXIS));
        pnlScorepad.add(scorePanelLabels1);
        pnlScorepad.add(scorePanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        add(pnlScorepad, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlScorepad;
    private com.davidjarski.javatzee.scorepad.ScorePanel scorePanel;
    private com.davidjarski.javatzee.scorepad.ScorePanelLabels scorePanelLabels1;
    // End of variables declaration//GEN-END:variables
}
