/* 
 * The MIT License
 *
 * Copyright 2014 David Jarski.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.davidjarski.javatzee.hints;

import com.davidjarski.javatzee.hand.Hand;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;

public class HintPanel extends javax.swing.JPanel
{

    private final Hand hand;
    private final Color selectedColor;
    private final Color standardColor;
    private final Font selectedFont;
    private final Font standardFont;
    private final Dimension boxPreferredSize;
    private final Dimension boxMinimumSize;

    /**
     * Creates new form HintBox
     */
    public HintPanel(Hand hand) {
        this.hand = hand;
        initComponents();

        boxPreferredSize = threeOfAKindBox.getPreferredSize();
        boxMinimumSize = threeOfAKindBox.getMinimumSize();

        sumPanel.setPreferredSize(new Dimension(
                checkBoxPanel.getPreferredSize().width,
                sumPanel.getPreferredSize().height));

        standardFont = javatzeeBox.getFont().deriveFont(Font.PLAIN);
        selectedFont = standardFont.deriveFont(Font.BOLD);
        standardColor = Color.BLACK;
        selectedColor = new Color(139, 0, 0); // dark red

        reset();
    }
    
    public HintPanel() {
        this(null);
    }

    public void reset() {
        setBoxAppearance(javatzeeBox, false);
        setBoxAppearance(fourOfAKindBox, false);
        setBoxAppearance(fullHouseBox, false);
        setBoxAppearance(longStraightBox, false);
        setBoxAppearance(shortStraightBox, false);
        setBoxAppearance(threeOfAKindBox, false);
        threeOfAKindBox.setPreferredSize(boxPreferredSize);
        threeOfAKindBox.setMinimumSize(boxMinimumSize);
        handSumLabel.setText(null);
    }

    public void updateDisplay() {
        setBoxAppearance(javatzeeBox, hand.isFiveOfAKind());
        setBoxAppearance(fourOfAKindBox, hand.isFourOfAKind());
        setBoxAppearance(threeOfAKindBox, hand.isThreeOfAKind());
        setBoxAppearance(fullHouseBox, hand.isFullHouse());
        setBoxAppearance(shortStraightBox, hand.isShortStraight());
        setBoxAppearance(longStraightBox, hand.isLongStraight());
        threeOfAKindBox.setPreferredSize(boxPreferredSize);
        threeOfAKindBox.setMinimumSize(boxMinimumSize);

        handSumLabel.setText(Integer.toString(hand.getSum()));
    }

    private void setBoxAppearance(DisabledCheckBox box, boolean selected) {
        box.setSelected(selected);
        if (selected) {
            box.setForeground(selectedColor);
            box.setFont(selectedFont);
        } else {
            box.setForeground(standardColor);
            box.setFont(standardFont);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sumPanel = new javax.swing.JPanel();
        handSumLabel = new javax.swing.JLabel();
        checkBoxPanel = new javax.swing.JPanel();
        threeOfAKindBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();
        fourOfAKindBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();
        fullHouseBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();
        shortStraightBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();
        longStraightBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();
        javatzeeBox = new com.davidjarski.javatzee.hints.DisabledCheckBox();

        setLayout(new java.awt.GridBagLayout());

        sumPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hand Sum", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 13))); // NOI18N
        sumPanel.setPreferredSize(new java.awt.Dimension(100, 50));
        sumPanel.setLayout(new java.awt.GridBagLayout());

        handSumLabel.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        handSumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        handSumLabel.setText("0");
        handSumLabel.setName(""); // NOI18N
        sumPanel.add(handSumLabel, new java.awt.GridBagConstraints());

        add(sumPanel, new java.awt.GridBagConstraints());

        checkBoxPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEmptyBorder(5, 5, 0, 5)), "Hand Hints", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 13))); // NOI18N
        checkBoxPanel.setLayout(new java.awt.GridBagLayout());

        threeOfAKindBox.setText("Three of a Kind");
        threeOfAKindBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        threeOfAKindBox.setIconTextGap(10);
        threeOfAKindBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        checkBoxPanel.add(threeOfAKindBox, gridBagConstraints);

        fourOfAKindBox.setText("Four of a Kind");
        fourOfAKindBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        fourOfAKindBox.setIconTextGap(10);
        fourOfAKindBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        checkBoxPanel.add(fourOfAKindBox, gridBagConstraints);

        fullHouseBox.setText("Full House");
        fullHouseBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        fullHouseBox.setIconTextGap(10);
        fullHouseBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        checkBoxPanel.add(fullHouseBox, gridBagConstraints);

        shortStraightBox.setText("Short Straight");
        shortStraightBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        shortStraightBox.setIconTextGap(10);
        shortStraightBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        checkBoxPanel.add(shortStraightBox, gridBagConstraints);

        longStraightBox.setText("Long Straight");
        longStraightBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        longStraightBox.setIconTextGap(10);
        longStraightBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        checkBoxPanel.add(longStraightBox, gridBagConstraints);

        javatzeeBox.setText("Javatzee");
        javatzeeBox.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        javatzeeBox.setIconTextGap(10);
        javatzeeBox.setMargin(new java.awt.Insets(2, 2, 3, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        checkBoxPanel.add(javatzeeBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(checkBoxPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel checkBoxPanel;
    private com.davidjarski.javatzee.hints.DisabledCheckBox fourOfAKindBox;
    private com.davidjarski.javatzee.hints.DisabledCheckBox fullHouseBox;
    private javax.swing.JLabel handSumLabel;
    private com.davidjarski.javatzee.hints.DisabledCheckBox javatzeeBox;
    private com.davidjarski.javatzee.hints.DisabledCheckBox longStraightBox;
    private com.davidjarski.javatzee.hints.DisabledCheckBox shortStraightBox;
    private javax.swing.JPanel sumPanel;
    private com.davidjarski.javatzee.hints.DisabledCheckBox threeOfAKindBox;
    // End of variables declaration//GEN-END:variables

}
